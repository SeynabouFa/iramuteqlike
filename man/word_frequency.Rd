% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/word_frequency.R
\name{word_frequency}
\alias{word_frequency}
\title{Map terms from a corpus and compute its word frequency}
\usage{
word_frequency(
  x,
  language = "en",
  stopwords = language,
  other_stopwords = NULL
)
}
\arguments{
\item{x}{An \link[base:is.recursive]{atomic vector} (usually a
\link[=character]{character} object) with a corpus (a collection of documents
containing text). Each element of \code{x} will represent a document (e.g., a
response from a survey).}

\item{language}{(optional) a string indicating the corpus language. See
\code{\link[tm:SimpleCorpus]{tm::SimpleCorpus()}} to learn more (default: \code{"en"}).}

\item{stopwords}{(optional) a string indicating the corpus language to be
pass to \code{\link[tm:stopwords]{tm::stopwords()}}. \code{\link[tm:stopwords]{tm::stopwords()}} return various kinds of words
related to a specific language to help clean a text analysis (default:
\code{"en"}).}

\item{other_stopwords}{(optional) a string indicating other stop words to be
removed from the text analysis.}
}
\value{
A \code{\link[tibble:tibble]{tibble}} object with two columns:
\itemize{
\item \code{word}: with an unique set of words mapped from \code{x}.
\item \code{freq}: with the absolute frequency of a word in \code{word}.
}
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}

\code{word_frequency()} map terms from a vector using the \link[tm:Corpus]{tm}
package system and outputs a \link[dplyr:reexports]{tibble} summarizing word
frequencies.

Please note that \code{word_frequency()} is required for other \code{iramuteqlike}
functions.
}
\examples{
if (requireNamespace("friends", quietly = TRUE)) {
    word_frequency(head(friends::friends[[1]], 100))
}

if (requireNamespace("stringi", quietly = TRUE)) {
    word_frequency(stringi::stri_rand_lipsum(5))
}
}
\concept{Mapping functions}
